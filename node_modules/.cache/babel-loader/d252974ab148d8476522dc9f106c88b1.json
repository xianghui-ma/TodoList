{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u524D\\u7AEF\\u9879\\u76EE\\\\React TodoList\\\\todolist\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport Header from './components/Header/Header';\nimport Main from './components/Main/Main';\nimport Footer from './components/Footer/Footer';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: []\n    };\n\n    this.getTodo = duty => {\n      let id = nanoid(),\n          newTodos = [...this.state.todos, {\n        id: id,\n        duty: duty,\n        done: false\n      }];\n      this.setState({\n        todos: newTodos\n      });\n    };\n\n    this.updateChecked = (id, done) => {\n      let newTodos = this.state.todos.map(item => {\n        if (item.id === id) {\n          return { ...item,\n            done: done\n          };\n        } else {\n          return item;\n        }\n      });\n      this.setState({\n        todos: newTodos\n      });\n    };\n\n    this.deleteDuty = id => {\n      let newTodos = this.state.todos.filter(item => {\n        return !(item.id === id);\n      });\n      this.setState({\n        todos: newTodos\n      });\n    };\n\n    this.selectAll = done => {\n      let newTodos = this.state.todos.map(item => {\n        return { ...item,\n          done: done\n        };\n      });\n      this.setState({\n        todos: newTodos\n      });\n    };\n\n    this.clearDutyDone = () => {\n      let newTodos = this.state.todos.filter(item => {\n        return item.done !== true;\n      });\n      this.setState({\n        todos: newTodos\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        getTodo: this.getTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        todos: this.state.todos,\n        updateChecked: this.updateChecked,\n        deleteDuty: this.deleteDuty\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        todos: this.state.todos,\n        selectAll: this.selectAll,\n        clearDutyDone: this.clearDutyDone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["E:/前端项目/React TodoList/todolist/src/App.js"],"names":["React","Component","nanoid","Header","Main","Footer","App","state","todos","getTodo","duty","id","newTodos","done","setState","updateChecked","map","item","deleteDuty","filter","selectAll","clearDutyDone","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {nanoid} from 'nanoid'\n\nimport Header from './components/Header/Header'\nimport Main from './components/Main/Main'\nimport Footer from './components/Footer/Footer'\n\nimport './App.css';\n\nexport default class App extends Component {\n  state = {todos: []};\n  getTodo = (duty) => {\n    let id = nanoid(),\n        newTodos = [...this.state.todos, {id: id, duty: duty, done: false}];\n    this.setState({todos: newTodos});\n  }\n  updateChecked = (id, done) => {\n    let newTodos = this.state.todos.map((item) => {\n      if(item.id === id){\n        return {...item, done: done};\n      }else{\n        return item;\n      }\n    });\n    this.setState({todos: newTodos});\n  }\n  deleteDuty = (id) => {\n    let newTodos = this.state.todos.filter((item) => {\n      return !(item.id === id);\n    });\n    this.setState({todos: newTodos});\n  }\n  selectAll = (done) => {\n    let newTodos = this.state.todos.map((item) => {\n      return {...item, done: done};\n    });\n    this.setState({todos: newTodos});\n  }\n  clearDutyDone = () => {\n    let newTodos = this.state.todos.filter((item) => {\n      return item.done !== true;\n    });\n    this.setState({todos: newTodos});\n  }\n  render() {\n    return (\n      <section className=\"wrapper\">\n        <Header getTodo = {this.getTodo} />\n        <Main todos={this.state.todos} updateChecked={this.updateChecked} deleteDuty={this.deleteDuty}/>\n        <Footer todos={this.state.todos} selectAll={this.selectAll} clearDutyDone={this.clearDutyDone}/>\n      </section>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}